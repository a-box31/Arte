@import url('https://fonts.googleapis.com/css2?family=Abel&family=Slabo+27px&family=Space+Mono&display=swap');
/*
If loading from a computer:

@font-face {
    font-family: Name of Font;

    //Some fonts aren't able to be rendered so multiple are given for backup support//

    src: url("File/Name of font.woff") format("woff");
    src: url("File/Name of alternate font.woff") format("woff2");

    font-weight: normal;
    font-style: normal;
}
*/

@font-face {
  font-family: GrandHotel;
  src: url("Fonts/GrandHotel.ttf");

  font-weight: normal;
  font-style: normal;
}


:root {
  --main-color: white;
  --default-color: #777;
  --bg-color: rgb(223, 223, 223); 
  --text-color: black;
  
}


* {
  /* 
    size of elements are determined by padding, margin, and content 

    so if we set a element to be 200px and the padding to be 20px, then 
    the 20px is included in the 200px

    without it the total area would be 240px
    */
  box-sizing: border-box;

  list-style: none;
  text-decoration: none;

  /* font family (default font to be used )*/
  font-family: 'Slabo 27px', sans-serif;
  /* font-family: Abel; */

  color: var(--default-color);
  margin: 0;
  padding: 0;
  scroll-padding-top: 2rem;
  scroll-behavior: smooth;
}

html,
body {
  /*
    some html elements have default paddings
    these were removed to make the heading look better
     */
  margin: 0;
  padding: 0;
}

.wrapper {
  background-color: var(--bg-color);
  height: 100vh;
  width: 100vw;

  overflow-y: scroll;
  overflow-x: hidden;
}

.content {
  margin: 13px;
  background-color: var(--main-color);
  /* display: none; */
}


.content-section {
  /* differentiates the section from the previous header*/
  margin: 1em;
}

.container {
  /* 
    Sets a max width on the section, meaning if the screen grows too large it
    will not out grow 900px
    */
  max-width: 800px;

  /* 
    margin for top and bottom set to zero
    
    auto-set the left and right margins for better fitting 
    (ie. centers the text to the screen)
    */
  margin: 0 auto;

  /* 
    ensures that even if the page is as small as possible there is a padding
    to prevent the text from hugging the edge
    */
  padding: 0 1.5em;
}

.section-header {
  /* Styles the section element with font, weight, color, position, and size */
  font-family: Abel;
  font-weight: normal;
  color: #333;
  text-align: center;
  font-size: 2.5em;
}

.about-logo-image {
  /* 
    trying to get the page to wrap around the image...
    by using the float property, we can make the image stay left while the
    entire page wraps around it
    image removes itself from the flow and "floats" left of the page
    */
  float: left;

  /* Setting the height and width of the images */
  height: 200px;
  width: 200px;

  /* setting a little margin so the text doesn't hug the picture*/
  margin: 15px;

  /*
    making the image rounded so the it sticks out more
    It is a property on how far we want to curve the edges of the border
    Since the image is square, 50% is the side that is shortest, taking that 
    it will vector out a circle
    */
  border-radius: 50%;

  /* 
    creating a border around the circle so that the white-background image can
    be seen as a circle 
    */
  border: 3px solid;
}

.main-footer {
  /* Background color should be white */
  background-color: #290133;

  /* Anything else should be white */
  color: white;

  /* padding should be for top and bottom */
  padding: 0.25em 0;
}

.main-footer-container {
  /* flex display/flex-box is a complicated display tool*/
  display: flex;

  /* Vertically aligns everything in the flex-box */
  align-items: center;
}

/* makes a flex-grows the list of */
.main-footer-container ul {
  /*
    left element should be as small as possible (ul elements)  
    1 - means grow and push everything to the right
    */
  flex-grow: 1;

  /* should be toward the right end */
  text-align: end;
}

/* footer list should have padding around*/
.footer-nav li {
  padding: 0 0.5em;
}

/* footer navigation images ex. youtube, spotify, etc logos */
.footer-nav img {
  /* if images were not sized already you cn set the height and width */
  height: 30px;
}

/* generic button class */
.btn {
  /* button should have text that is centered horizontally (usually after padding) */
  text-align: center;

  /* button should have text that is centered vertically (usually after padding) */
  vertical-align: middle;

  /* padding will make buttons bigger */
  padding: 0.67em;

  cursor: pointer;
}

.btn-header {
  /* want to off center the header button to the left to an extent*/
  /* if we use all 4 values of the margin property: top, right, bottom, left */
  margin: 0.5em 30% 2em 15%;

  /* changing the look of the button: color, border, background color */
  color: white;
  border: 2px solid white;
  background-color: rgba(255, 255, 255, 0.1);

  /* makes sure that the this button isn't round on corners */
  border-radius: 0;

  font-size: 1.5em;
  font-weight: lighter;
  padding-left: 2em;
  padding-right: 2em;
}

/* to change colors when hovered over */
.btn-header:hover {
  background-color: rgba(255, 255, 255, 0.3);
}

.play-btn {
  display: block;
  margin: 0 auto;
  color: white;
  font-size: 4em;
  border-radius: 50%;
  padding: 0;
  height: 100px;
  width: 100px;
}

.tour-row {
  border-bottom: 1px solid;
  padding-bottom: 1em;
  margin-bottom: 1em;
}

.tour-row:last-child {
  border-bottom: none;
}

.tour-item {
  /* 
    To add padding to the top and bottom or add heights, you have to make it a 
    inline block because blocks are two dimensional while lines only have a 
    width
    */

  display: inline-block;
  padding-right: 0.5em;
}

/* 
Inline block elements add a width to the block that can't be removed
the solution is to add up all the percentages, divide each accordingly, then 
subtract out an estimated portion from these widths to make sure to account for
the block element's extra width
*/
.tour-date {
  color: #555;
  font-weight: bold;
  width: 11%;
}

.tour-city {
  width: 24%;
}

.tour-arena {
  width: 42%;
}

.tour-btn {
  max-width: 19%;
}

